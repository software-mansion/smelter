name: lint
on:
    workflow_dispatch: {}
    push:
        branches: [master]
    pull_request:
        types: [opened, synchronize]

concurrency:
    group: ${{ github.workflow }}-${{ github.ref }}
    cancel-in-progress: ${{ github.ref != 'refs/heads/master' }}

jobs:
    check:
        runs-on: ubuntu-24.04
        steps:
            - name: 🛠 Install system dependencies
              run: |
                  set -e

                  echo ttf-mscorefonts-installer msttcorefonts/accepted-mscorefonts-eula select true | sudo debconf-set-selections

                  sudo apt-get update -y -qq
                  sudo apt-get install -y mesa-vulkan-drivers libegl1-mesa-dev libgl1-mesa-dri libxcb-xfixes0-dev ffmpeg libavcodec-dev libavformat-dev libavfilter-dev libavdevice-dev ttf-mscorefonts-installer libopus-dev

                  fc-cache -f

            - name: 🔧 Install the rust toolchain
              uses: dtolnay/rust-toolchain@stable
              with:
                  toolchain: 1.85.0
                  components: rustfmt, clippy

            - name: Install pnpm
              uses: pnpm/action-setup@v4
              with:
                  version: 9

            - name: 🛠 Setup Node.JS
              uses: actions/setup-node@v4
              with:
                  node-version: 20

            - name: 📥 Checkout repo
              uses: actions/checkout@v4

            - name: 🧩 Git submodules update
              run: |
                cat > .gitmodules << EOF
                [submodule "snapshot_tests/snapshots"]
                        path = snapshot_tests/snapshots
                        url = https://github.com/membraneframework-labs/video_compositor_snapshot_tests.git
                EOF
                git submodule update --init

            - name: 📁 Rust cache
              uses: Swatinem/rust-cache@v2

            - name: 🪢 Generate Chromium Embedded Framework bindings
              run: cargo build --package compositor_chromium

            - name: 📖 Check formatting
              run: cargo fmt --all --check

            - name: 📎 Run clippy
              run: cargo clippy --workspace --all-targets --all-features -- -D clippy::todo -D warnings

            - name: 📄 Generate JSON schema
              working-directory: ./generate
              run: |
                cargo run --bin generate_from_types -- --check
